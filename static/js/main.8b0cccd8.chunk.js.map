{"version":3,"sources":["assets/car-wash.gif","assets/car-wash.png","firebase.js","components/MarkButton.js","components/SwapDate.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","getFirestore","MarkButton","_ref","loading","handleClick","todayStatus","status","undefined","menuProps","items","label","key","disabled","onClick","_ref2","keyPath","domEvent","_jsx","Dropdown","menu","trigger","children","_jsxs","Button","type","shape","size","SmileTwoTone","twoToneColor","CheckCircleTwoTone","CloseCircleTwoTone","DownOutlined","SwapDate","open","selection","handleRemoveSelection","handleSubmit","handleCancel","onClickRemove","day","Affix","offsetBottom","Row","align","id","justify","className","Col","xs","from","Flex","vertical","moment","date","format","person","danger","icon","MinusOutlined","SwapOutlined","style","fontSize","color","to","gap","Title","Typography","App","allStatus","setAllStatus","useState","setLoading","calendar","setCalendar","calendarDataView","setCalendarDataView","swapSelection","setSwapSelection","arrangement","start","end","fetchCalendarDataFromFireBase","async","querySnapshot","getDocs","collection","newData","forEach","doc","push","data","queryCalendar","calendarData","firstDayStr","docs","startOf","isBefore","i","firstDay","add","dayISO","error","console","useEffect","calendarDataForView","week","_","isSame","handleClickDay","selectedDateStatus","find","prevState","newState","_prevState$from","_prevState$to","_prevState$from2","_prevState$to2","filter","d","map","includes","s","todayDataInCalendar","c","todayPerson","length","sm","md","lg","xl","src","carWashAnimated","width","Badge","Ribbon","text","minHeight","level","docRefID","clickedOption","updatedAt","docRef","setDoc","newObject","prevData","itemIndex","findIndex","item","index","log","colSpan","Math","abs","diff","dateCellClass","swapSelectionClass","some","concat","carWashStatic","clearSwapSelection","submitSwap","docRefFrom","docRefTo","fromAfterSwap","toAfterSwap","in","out","updateDoc","swapDocuments","Spin","tip","rootElement","document","getElementById","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.8b0cccd8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/car-wash.8b2ec219.gif\";","export default __webpack_public_path__ + \"static/media/car-wash.83a6d6f4.png\";","import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAnalytics } from \"firebase/analytics\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBLnjz1nTXh_fR9CBRW4CahMtalbvwLupc\",\n  authDomain: \"car-wash-group.firebaseapp.com\",\n  projectId: \"car-wash-group\",\n  storageBucket: \"car-wash-group.appspot.com\",\n  messagingSenderId: \"264083815693\",\n  appId: \"1:264083815693:web:624db999c2368ace6e4444\",\n  measurementId: \"G-0RYWCPLE1X\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst firestore = getFirestore(app);\n\nexport default firestore;\n","import React from \"react\";\nimport { Dropdown, Button } from \"antd\";\nimport {\n  DownOutlined,\n  CheckCircleTwoTone,\n  CloseCircleTwoTone,\n  SmileTwoTone\n} from \"@ant-design/icons\";\n\nconst MarkButton = ({ loading, handleClick, todayStatus }) => {\n  const handleMenuClick = ({ key, keyPath, domEvent }) => {\n    handleClick(key);\n  };\n  // console.log(\"today status from button comp\", todayStatus);\n  const status = todayStatus === undefined ? null : todayStatus.status;\n\n  const items = [\n    {\n      label: \"会去洗\",\n      key: \"会去洗\",\n      disabled: status === \"会去洗\"\n    },\n    {\n      label: \"洗过了\",\n      key: \"洗过了\",\n      disabled: status === \"洗过了\"\n    },\n    {\n      label: \"不洗了\",\n      key: \"不洗了\",\n      disabled: status === \"不洗了\"\n    }\n  ];\n\n  const menuProps = {\n    items,\n    onClick: handleMenuClick\n  };\n\n  return (\n    <Dropdown menu={menuProps} loading={loading} trigger={[\"click\"]}>\n      <Button type={status ? \"default\" : \"primary\"} shape=\"round\" size=\"large\">\n        {status === \"会去洗\" && <SmileTwoTone twoToneColor=\"#0ca237\" />}\n        {status === \"洗过了\" && <CheckCircleTwoTone />}\n        {status === \"不洗了\" && <CloseCircleTwoTone twoToneColor=\"#ff0000\" />}\n        我今天{status || \"...\"}\n        <DownOutlined />\n      </Button>\n    </Dropdown>\n  );\n};\n\nexport default MarkButton;\n","import React from \"react\";\nimport { Col, Row, Affix, Flex, Button } from \"antd\";\nimport { SwapOutlined, MinusOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\n\nconst SwapDate = ({\n  open,\n  selection,\n  handleRemoveSelection,\n  handleSubmit,\n  handleCancel\n}) => {\n  const onClickRemove = (day) => {\n    handleRemoveSelection(day);\n  };\n  return (\n    <Affix offsetBottom=\"0\">\n      <Row\n        align=\"middle\"\n        id=\"swap-container\"\n        justify=\"center\"\n        className={open ? \"open\" : \"\"}\n      >\n        <Col xs={6}>\n          <div className=\"slot from\">\n            {selection.from && (\n              <Flex vertical={\"vertical\"} justify=\"center\" align=\"center\">\n                <div className=\"date\">\n                  {moment(selection.from.date).format(\"MMM DD, YYYY\")}\n                </div>\n                <div className=\"person\">{selection.from.person}</div>\n                <Button\n                  danger\n                  size=\"small\"\n                  shape=\"circle\"\n                  icon={<MinusOutlined />}\n                  onClick={() => onClickRemove(selection.from)}\n                />\n              </Flex>\n            )}\n          </div>\n        </Col>\n        <Col xs={4}>\n          <SwapOutlined style={{ fontSize: \"16px\", color: \"#08c\" }} />\n        </Col>\n        <Col xs={6}>\n          <div className=\"slot to\">\n            {selection.to && (\n              <Flex vertical={\"vertical\"} justify=\"center\" align=\"center\">\n                <div className=\"date\">\n                  {moment(selection.to.date).format(\"MMM DD, YYYY\")}\n                </div>\n                <div className=\"person\">{selection.to.person}</div>\n                <Button\n                  danger\n                  size=\"small\"\n                  shape=\"circle\"\n                  icon={<MinusOutlined />}\n                  onClick={() => onClickRemove(selection.to)}\n                />\n              </Flex>\n            )}\n          </div>\n        </Col>\n        <Col xs={6}>\n          <Flex gap=\"large\" vertical={\"vertical\"} align=\"flex-end\">\n            <div>\n              <Button\n                type=\"primary\"\n                disabled={selection.from === null || selection.to === null}\n                onClick={() => handleSubmit()}\n              >\n                Save\n              </Button>\n            </div>\n            <div>\n              <Button onClick={() => handleCancel()}>Cancel</Button>\n            </div>\n          </Flex>\n        </Col>\n      </Row>\n    </Affix>\n  );\n};\n\nexport default SwapDate;\n","import \"./styles.css\";\nimport React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport carWashAnimated from \"./assets/car-wash.gif\";\nimport carWashStatic from \"./assets/car-wash.png\";\nimport { Col, Row, Flex, Typography, Badge, Spin } from \"antd\";\nconst { Title } = Typography;\nimport firestore from \"./firebase\";\nimport {\n  collection,\n  getDocs,\n  doc,\n  setDoc,\n  getDoc,\n  updateDoc\n} from \"firebase/firestore\";\nimport MarkButton from \"./components/MarkButton\";\nimport SwapDate from \"./components/SwapDate\";\n\nexport default function App() {\n  const [allStatus, setAllStatus] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [calendar, setCalendar] = useState([]);\n  const [calendarDataView, setCalendarDataView] = useState([]);\n  const [swapSelection, setSwapSelection] = useState({ from: null, to: null });\n\n  const arrangement = {\n    start: moment(\"2023-12-07\"),\n    end: moment(\"2024-03-11\")\n  };\n\n  const fetchCalendarDataFromFireBase = async () => {\n    try {\n      const querySnapshot = await getDocs(\n        collection(firestore, \"calendarMark\")\n      );\n      const newData = [];\n      querySnapshot.forEach((doc) => {\n        newData.push({ id: doc.id, ...doc.data() });\n      });\n      const queryCalendar = await getDocs(collection(firestore, \"calendar\"));\n      const calendarData = [];\n      // Fill in redundant days upto the first day of the first week\n      const firstDayStr = queryCalendar.docs[0].data().date;\n      if (moment(firstDayStr).startOf(\"week\").isBefore(moment(\"2023-12-07\"))) {\n        for (let i = 0; i < moment(firstDayStr).day(); i++) {\n          const firstDay = moment(firstDayStr).startOf(\"week\");\n          firstDay.add(i, \"days\");\n          calendarData.push({\n            id: firstDay.format(\"YYYYMMDD\"),\n            date: firstDay.format(\"YYYY-MM-DD\"),\n            dayISO: firstDay.format(\"ddd\"),\n            day: firstDay.day(),\n            person: \"\"\n          });\n        }\n      }\n      // Add remaining data from Firebase to the calendarData\n      queryCalendar.forEach((doc) => {\n        calendarData.push({ id: doc.id, ...doc.data() });\n      });\n\n      setAllStatus(newData);\n      setCalendar(calendarData);\n      // console.log(\"Data from firebase\", newData);\n    } catch (error) {\n      console.error(\"Error fetching data: \", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchCalendarDataFromFireBase();\n  }, []);\n\n  useEffect(() => {\n    // Generate calendar data for the view\n    const calendarDataForView = [];\n    let week = [];\n    calendar.forEach((day) => {\n      const date = moment(day.date);\n      const _ = {\n        ...day,\n        dayISO: date.format(\"ddd\"),\n        day: date.day()\n      };\n      week.push(_);\n      if (_.day === 6 || moment(_.date).isSame(arrangement.end)) {\n        calendarDataForView.push(week);\n        week = [];\n      }\n    });\n    setCalendarDataView(calendarDataForView);\n    setSwapSelection({ from: null, to: null });\n  }, [calendar]);\n\n  const updateData = (newObject) => {\n    setAllStatus((prevData) => {\n      const itemIndex = prevData.findIndex((item) => item.id === newObject.id);\n\n      if (itemIndex !== -1) {\n        // If the item exists, update it\n        return prevData.map((item, index) =>\n          index === itemIndex ? { ...newObject } : item\n        );\n      } else {\n        // If the item doesn't exist, add it to the array\n        return [...prevData, newObject];\n      }\n    });\n  };\n\n  const addDataToFirestore = async (clickedOption) => {\n    try {\n      setLoading(true);\n      const docRefID = moment().format(\"YYYYMMDD\");\n      const data = {\n        date: moment().format(\"YYYY-MM-DD\"),\n        person: todayPerson || \"\",\n        status: clickedOption,\n        updatedAt: moment().format(\"YYYY-MM-DD HH:mm:ss\")\n      };\n      // Add the data to Firestore\n      const docRef = doc(collection(firestore, \"calendarMark\"), docRefID);\n      await setDoc(docRef, data);\n      updateData({ id: docRefID, ...data });\n      console.log(\"Document written with ID: \", docRef.id);\n    } catch (error) {\n      console.error(\"Error adding document: \", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleClickDay = (day) => {\n    if (!day.person || moment(day.date).isBefore(moment().add(-1, \"days\"))) {\n      return;\n    }\n    const selectedDateStatus = allStatus.find((_) => _.id === day.id);\n    if (selectedDateStatus?.status === \"洗过了\") {\n      return;\n    }\n    setSwapSelection((prevState) => {\n      let newState = {};\n      const selectedIds = [prevState.from, prevState.to]\n        .filter((d) => d !== null)\n        .map((d) => d.id);\n\n      if (selectedIds.includes(day.id)) {\n        newState = {\n          ...prevState,\n          from: prevState.from?.id === day.id ? null : prevState.from,\n          to: prevState.to?.id === day.id ? null : prevState.to\n        };\n      } else {\n        if (prevState.from === null) {\n          newState = { ...prevState, from: day };\n        } else if (prevState.from?.id === day.id) {\n          newState = { ...prevState, from: null };\n        } else if (prevState.to === null) {\n          newState = { ...prevState, to: day };\n        } else if (prevState.to?.id === day.id) {\n          newState = { ...prevState, to: null };\n        } else {\n          newState = prevState;\n        }\n      }\n      return newState;\n    });\n  };\n  const clearSwapSelection = () => {\n    setSwapSelection({\n      from: null,\n      to: null\n    });\n  };\n\n  const swapDocuments = async (from, to) => {\n    try {\n      // Get references to the documents\n      const docRefFrom = doc(firestore, \"calendar\", from.id);\n      const docRefTo = doc(firestore, \"calendar\", to.id);\n\n      // Craft new data\n      const fromAfterSwap = {\n        ...from,\n        person: to.person\n      };\n      const toAfterSwap = {\n        ...to,\n        person: from.person\n      };\n\n      console.log(\"from\", { id: from.id, in: from, out: fromAfterSwap });\n      console.log(\"to\", { id: to.id, in: to, out: toAfterSwap });\n      // Update the documents with swapped data\n      await updateDoc(docRefFrom, fromAfterSwap);\n      await updateDoc(docRefTo, toAfterSwap);\n\n      console.log(\"Documents swapped successfully\");\n      fetchCalendarDataFromFireBase();\n    } catch (error) {\n      console.error(\"Error swapping documents: \", error);\n    }\n  };\n\n  const submitSwap = () => {\n    swapDocuments(swapSelection.from, swapSelection.to);\n  };\n\n  const todayStatus = allStatus.find(\n    (s) => s.id === moment().format(\"YYYYMMDD\")\n  );\n\n  const todayDataInCalendar = calendar.find(\n    (c) => c.id === moment().format(\"YYYYMMDD\")\n  );\n  const todayPerson = todayDataInCalendar?.person;\n\n  if (!calendarDataView.length) {\n    return <Spin tip=\"Loading...\"></Spin>;\n  }\n\n  return (\n    <div className=\"App\">\n      <Row align=\"middle\">\n        <Col xs={24} sm={24} md={24} lg={12} xl={12}>\n          <img src={carWashAnimated} style={{ width: \"100%\" }} />\n        </Col>\n        <Col xs={24} sm={24} md={24} lg={12} xl={12}>\n          <Badge.Ribbon text={moment().format(\"LL\")}>\n            <Flex\n              vertical={\"vertical\"}\n              justify=\"center\"\n              align=\"center\"\n              style={{ minHeight: \"280px\" }}\n            >\n              <Title level={4}>今天洗车的是</Title>\n              <Title>{todayPerson}</Title>\n              <MarkButton\n                loading={loading}\n                handleClick={addDataToFirestore}\n                todayStatus={todayStatus}\n              />\n            </Flex>\n          </Badge.Ribbon>\n        </Col>\n      </Row>\n      <table>\n        <thead>\n          <tr>\n            <th colSpan={7}>\n              Days remaining: {Math.abs(moment().diff(arrangement.end, \"days\"))}\n            </th>\n          </tr>\n          <tr>\n            <th>Sun</th>\n            <th>Mon</th>\n            <th>Tue</th>\n            <th>Wed</th>\n            <th>Thu</th>\n            <th>Fri</th>\n            <th>Sat</th>\n          </tr>\n        </thead>\n        <tbody>\n          {calendarDataView.map((week, i) => (\n            <tr key={i}>\n              {week.map((day) => {\n                const dateCellClass = moment(day.date).isSame(moment(), \"day\")\n                  ? \"active\"\n                  : moment(day.date).isBefore(moment())\n                  ? \"past\"\n                  : \"future\";\n                const swapSelectionClass = [\n                  swapSelection.from,\n                  swapSelection.to\n                ]\n                  .filter((d) => d !== null)\n                  .some((d) => d.id === day.id)\n                  ? \"selected\"\n                  : \"\";\n                return (\n                  <td\n                    key={day.id}\n                    className={`${dateCellClass} ${swapSelectionClass}`}\n                  >\n                    <div className=\"day\" onClick={() => handleClickDay(day)}>\n                      <div className=\"header\">\n                        {moment(day.date).format(\"MMM DD\")}\n                      </div>\n                      <div className=\"icon\">\n                        <img src={carWashStatic} />\n                      </div>\n                      <div className=\"people\">{day.person}</div>\n                    </div>\n                  </td>\n                );\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <SwapDate\n        selection={swapSelection}\n        open={!!swapSelection.from || !!swapSelection.to}\n        handleRemoveSelection={handleClickDay}\n        handleCancel={clearSwapSelection}\n        handleSubmit={submitSwap}\n      />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"],"sourceRoot":""}